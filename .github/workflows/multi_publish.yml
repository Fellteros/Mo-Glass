name: Publish Multiple Releases

on:
  workflow_dispatch:
    inputs:
      branches:
        description: "Space-separated list of branches to publish from"
        required: true
        type: string
      # TODO: Maybe also get the mod_version in each branch and verify that it's as expected before publishing?
      # mod_version:
      #   description: "Expected mod version"
      #   required: true
      #   type: string

permissions:
  # Needed to trigger the publish workflow.
  actions: write

jobs:

  prepare:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.set_branches.outputs.branches }}
    steps:
    - name: Convert branches input to JSON array
      id: set_branches
      run: |
        JSON_ARRAY=$(echo "[\"$(echo ${{ inputs.branches }} | tr ' ' '\",\"')\"]")
        echo "branches=$JSON_ARRAY" >> "$GITHUB_OUTPUT"

  publish_each:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        branch: ${{ fromJson(needs.prepare.outputs.branches) }}
    steps:
    - name: Build publish inputs
      id: publish_inputs
      run: |
        JSON_STRING=$(cat << EOF
        {
          "close_milestone": "true",
          "upload_backups": "true",
          "publish_github": "true",
          "publish_curseforge": "true",
          "publish_modrinth": "true",
          "update_website": "true"
        }
        EOF
        )
        # Convert to single line and escape quotes
        echo "json=${JSON_STRING//$'\n'/}" >> "$GITHUB_OUTPUT"
    - name: Trigger publish workflow
      id: publish_dispatch
      uses: codex-/return-dispatch@v2
      with:
        token: ${{ github.token }}
        owner: Wurst-Imperium
        repo: Mo-Glass
        ref: ${{ matrix.branch }}
        workflow: publish.yml
        workflow_inputs: ${{ steps.publish_inputs.outputs.json }}
    - name: Wait for publish workflow to finish (run ${{ steps.publish_dispatch.outputs.run_id }})
      uses: codex-/await-remote-run@v1
      with:
        token: ${{ github.token }}
        owner: Wurst-Imperium
        repo: Mo-Glass
        run_id: ${{ steps.publish_dispatch.outputs.run_id }}
        run_timeout_seconds: 600  # 10 minutes
      # TODO: Get the mc_version and modloader from each branch, then use them to start the announcement workflow
